var searchIndex = new Map(JSON.parse('[["poc_kokkos_rs",{"t":"CCCIPPPGINNNNNNNPPPGNNCNNNNNHCNNNNNPGPPNNHNNNHNHNNNNNPPPFGPPPGPGPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNOOOPPFGIIINNNNNNOOOOOOOONNNNNNNNNNNOOOONNCNOOOONNNNNNPKGIGPSPPPPNNNNNNNHNNNNNNNNNNNNNNNNO","n":["functor","routines","view","ForKernelType","Handle","Index1D","IndexND","KernelArgs","SerialForKernelType","borrow","borrow_mut","from","into","try_from","try_into","type_id","Dispatch","InconsistentDepth","InconsistentExecSpace","StatementError","borrow","borrow_mut","dispatch","fmt","","from","","into","parallel_for","parameters","source","to_string","try_from","try_into","type_id","CPU","DispatchError","GPU","Serial","borrow","borrow_mut","cpu","fmt","","from","gpu","into","serial","source","to_string","try_from","try_into","type_id","DeviceCPU","DeviceGPU","Dynamic","ExecutionPolicy","ExecutionSpace","MDRangePolicy","PerTeam","PerThread","RangePolicy","","Schedule","Serial","Static","TeamPolicy","TeamThreadMDRange","TeamThreadRange","TeamVectorMDRange","TeamVectorRange","ThreadVectorMDRange","ThreadVectorRange","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","fmt","","","","from","","","","into","","","","range","schedule","space","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","league_size","team_size","vector_size","DoubleMirroring","ValueError","ViewBase","ViewError","ViewOwned","ViewRO","ViewRW","borrow","","borrow_mut","","create_mirror","create_mutable_mirror","data","","","","dim","","","","eq","flat_idx","fmt","","from","","get","index","index_mut","into","","layout","","","","new","new_from_data","parameters","set","stride","","","","try_from","","try_into","","type_id","","Borrowed","DataTraits","DataType","InnerDataType","Layout","Left","MAX_VIEW_DEPTH","MutBorrowed","Owned","Right","Stride","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","compute_stride","default","eq","","fmt","","from","","into","","to_owned","try_from","","try_into","","type_id","","s"],"q":[[0,"poc_kokkos_rs"],[3,"poc_kokkos_rs::functor"],[16,"poc_kokkos_rs::routines"],[35,"poc_kokkos_rs::routines::dispatch"],[53,"poc_kokkos_rs::routines::parameters"],[126,"poc_kokkos_rs::routines::parameters::RangePolicy"],[129,"poc_kokkos_rs::view"],[179,"poc_kokkos_rs::view::parameters"],[214,"poc_kokkos_rs::view::parameters::Layout"],[215,"core::result"],[216,"core::any"],[217,"core::fmt"],[218,"core::ops::function"],[219,"core::error"],[220,"core::option"],[221,"alloc::string"],[222,"core::cmp"],[223,"alloc::vec"]],"i":"````Af00``0000000j00`00`00000``00000A``0000`000`0`00000Bb0Bf``Bd00`0`210000000201Ab3120312031203120323120312031200003120312031203120Bj00Cb0`````0Bn1000ChC`Cf3210333434333343210333`32103434343Cj````Dd`11001010000`0101010100101010Dh","f":"`````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{bh}````65`{{{b{j}}{b{dl}}}n}05{A`j}5{{Abc}{{f{Adj}}}{{Ah{Af}}}}`{{{b{j}}}{{Al{{b{Aj}}}}}}{bAn}765````;:{{AbB`}{{f{AdA`}}}}{{{b{A`}}{b{dl}}}n}0;1:1{{{b{A`}}}{{Al{{b{Aj}}}}}}3:98````````````````````>>>>===={{{b{Bb}}}Bb}{{{b{Bd}}}Bd}{{{b{Bf}}}Bf}{{{b{Ab}}}Ab}{{b{b{dc}}}Ad{}}000{{bBh}Ad}000{{}Bb}{{}Bf}{{{b{Bb}}{b{dl}}}n}{{{b{Bd}}{b{dl}}}n}{{{b{Bf}}{b{dl}}}n}{{{b{Ab}}{b{dl}}}n}{cc{}}000{{}c{}}000{AbBd}{AbBf}{AbBb}{bc{}}000{c{{f{e}}}{}{}}000{{}{{f{c}}}{}}000{bh}000{BjBl}00```````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{Bn{c}}}}}{{f{{C`{c}}Cb}}}Cd}{{{b{d{Bn{c}}}}}{{f{{Cf{c}}Cb}}}Cd}{ChCj}{C`Cj}{CfCj}{BnCj}{ChCl}{C`Cl}{CfCl}{BnCl}{{{b{{Bn{c}}}}{b{{Bn{c}}}}}Cn{CdD`}}{{{b{{Bn{c}}}}{Cl{Bl}}}BlCd}{{{b{Cb}}{b{dl}}}n}{{{b{{Bn{c}}}}{b{dl}}}n{CdDb}}{cc{}}0{{{b{{Bn{c}}}}{Cl{Bl}}}cCd}{{{b{{Bn{c}}}}{Cl{Bl}}}{{b{e}}}Cd{}}{{{b{d{Bn{c}}}}{Cl{Bl}}}{{b{de}}}Cd{}}{{}c{}}0{ChDd}{C`Dd}{CfDd}{BnDd}{{Dd{Cl{Bl}}}{{Bn{c}}}Cd}{{{Df{c}}Dd{Cl{Bl}}}{{Bn{c}}}Cd}`{{{b{d{Bn{c}}}}{Cl{Bl}}c}AdCd}{ChCl}{C`Cl}{CfCl}{BnCl}{c{{f{e}}}{}{}}0{{}{{f{c}}}{}}0{bh}0``````{{}Bl}````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Dd}}}Dd}{{b{b{dc}}}Ad{}}{{bBh}Ad}{{{b{{Cl{Bl}}}}{b{Dd}}}{{Cl{Bl}}}}{{}Dd}{{{b{{Cj{c}}}}{b{{Cj{c}}}}}CnCd}{{{b{Dd}}{b{Dd}}}Cn}{{{b{{Cj{c}}}}{b{dl}}}n{CdDb}}{{{b{Dd}}{b{dl}}}n}{cc{}}0{{}c{}}0{bc{}}{c{{f{e}}}{}{}}0{{}{{f{c}}}{}}0{bh}0{DhCl}","D":"Nb","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Result",215,null,1],[5,"TypeId",216],[6,"StatementError",16],[5,"Formatter",217],[8,"Result",217],[6,"DispatchError",35],[5,"ExecutionPolicy",53],[1,"unit"],[6,"KernelArgs",3],[10,"FnMut",218],[10,"Error",219],[6,"Option",220,null,1],[5,"String",221],[8,"SerialForKernelType",3],[6,"ExecutionSpace",53],[6,"RangePolicy",53],[6,"Schedule",53],[1,"u8"],[15,"TeamPolicy",126],[1,"usize"],[5,"ViewBase",129],[8,"ViewRO",129],[6,"ViewError",129],[10,"DataTraits",179],[8,"ViewRW",129],[8,"ViewOwned",129],[6,"DataType",179],[1,"array"],[1,"bool"],[10,"PartialEq",222],[10,"Debug",217],[6,"Layout",179],[5,"Vec",223],[15,"Stride",214]],"r":[],"b":[[23,"impl-Debug-for-StatementError"],[24,"impl-Display-for-StatementError"],[42,"impl-Debug-for-DispatchError"],[43,"impl-Display-for-DispatchError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGYAFAAKAAEADgACABUAAQAYAAEAGwAAAB8ABAAoAAEAKwABADEABABKABkAbwAPAIIAAQCJAAMAlwAAAJkAAQCeAAEArgAFAL8ABgDHAAQA0AAHAA==","P":[[9,"T"],[12,"U"],[13,"U,T"],[14,"U"],[15,""],[20,"T"],[23,""],[25,"T"],[26,""],[27,"U"],[28,""],[30,""],[32,"U,T"],[33,"U"],[34,""],[39,"T"],[41,""],[44,"T"],[45,""],[46,"U"],[47,""],[50,"U,T"],[51,"U"],[52,""],[73,"T"],[81,""],[85,"T"],[89,""],[99,"T"],[103,"U"],[107,""],[110,"T"],[114,"U,T"],[118,"U"],[122,""],[136,"T"],[142,""],[150,"T"],[152,""],[153,"T"],[157,"T,Index::Output"],[159,"U"],[161,""],[165,"T"],[169,""],[173,"U,T"],[175,"U"],[177,""],[190,"T"],[194,""],[195,"T"],[196,""],[199,"T"],[200,""],[201,"T"],[202,""],[203,"T"],[205,"U"],[207,"T"],[208,"U,T"],[210,"U"],[212,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5850]}